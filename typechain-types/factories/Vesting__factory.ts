/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_vestingName",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedClaimablePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenAmounts",
        type: "uint256[]",
      },
    ],
    name: "addBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_percent",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_unlockTime",
        type: "uint256[]",
      },
    ],
    name: "addUnlockEvents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimablePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimablePercentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBeneficiaries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnlockEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.UnlockEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "releasedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a76400006009553480156200001d57600080fd5b5060405162001ab538038062001ab583398101604081905262000040916200018d565b620000546200004e62000093565b62000097565b600280546001600160a01b0319166001600160a01b038516179055600382905580516200008990600a906020840190620000e7565b50505050620002db565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000f59062000288565b90600052602060002090601f01602090048101928262000119576000855562000164565b82601f106200013457805160ff191683800117855562000164565b8280016001018555821562000164579182015b828111156200016457825182559160200191906001019062000147565b506200017292915062000176565b5090565b5b8082111562000172576000815560010162000177565b600080600060608486031215620001a2578283fd5b83516001600160a01b0381168114620001b9578384fd5b60208581015160408701519295509350906001600160401b0380821115620001df578384fd5b818701915087601f830112620001f3578384fd5b815181811115620002085762000208620002c5565b604051601f8201601f19168101850183811182821017156200022e576200022e620002c5565b60405281815283820185018a101562000245578586fd5b8592505b8183101562000268578383018501518184018601529184019162000249565b818311156200027957858583830101525b80955050505050509250925092565b6002810460018216806200029d57607f821691505b60208210811415620002bf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6117ca80620002eb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a0e2e5f6116100a2578063ced9bb0511610071578063ced9bb05146101f9578063d1a82b0414610201578063efeb5e5814610216578063f2fde38b14610229578063fc0c546a1461023c57610116565b8063a0e2e5f6146101b8578063a9610655146101cb578063be9a6555146101de578063c6189b6f146101e657610116565b8063715018a6116100e9578063715018a61461015e57806389885049146101665780638da5cb5b14610179578063913b722c1461018e578063a0afd472146101a357610116565b80631cf1bb721461011b57806340e69bf01461014457806341764eaf1461014c57806348c54b9d14610154575b600080fd5b61012e610129366004611118565b610244565b60405161013b919061161d565b60405180910390f35b61012e610256565b61012e61025c565b61015c610262565b005b61015c61037b565b61012e610174366004611118565b6103c6565b6101816103dc565b60405161013b919061128e565b6101966103ec565b60405161013b91906112bb565b6101ab61044e565b60405161013b9190611308565b61012e6101c6366004611118565b6104c1565b61015c6101d9366004611132565b6104d3565b61012e6105ae565b61015c6101f43660046111f0565b6105b4565b61012e610707565b61020961091b565b60405161013b9190611357565b61018161022436600461125a565b6109a9565b61015c610237366004611118565b6109d3565b610181610a41565b60076020526000908152604090205481565b60055481565b60045481565b336000908152600660205260409020546102975760405162461bcd60e51b815260040161028e9061138a565b60405180910390fd5b33600090815260066020908152604080832054600790925290912054106102d05760405162461bcd60e51b815260040161028e906114a1565b60006102e3336102de610a50565b610c76565b905080156103785780600860008282546102fd9190611674565b9091555050600254610319906001600160a01b03163383610cdc565b3360009081526007602052604081208054839290610338908490611674565b90915550506040517fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e9061036f90339084906112a2565b60405180910390a15b50565b610383610d32565b6001600160a01b03166103946103dc565b6001600160a01b0316146103ba5760405162461bcd60e51b815260040161028e906114eb565b6103c46000610d36565b565b60006103d4826102de610707565b90505b919050565b6000546001600160a01b03165b90565b6060600b80548060200260200160405190810160405280929190818152602001828054801561044457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610426575b5050505050905090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156104b857838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610472565b50505050905090565b60066020526000908152604090205481565b6104db610d32565b6001600160a01b03166104ec6103dc565b6001600160a01b0316146105125760405162461bcd60e51b815260040161028e906114eb565b80518251146105335760405162461bcd60e51b815260040161028e906113fc565b60005b82518110156105a95761059783828151811061056257634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061058a57634e487b7160e01b600052603260045260246000fd5b6020026020010151610d86565b806105a18161174d565b915050610536565b505050565b60035481565b6105bc610d32565b6001600160a01b03166105cd6103dc565b6001600160a01b0316146105f35760405162461bcd60e51b815260040161028e906114eb565b80518251146106145760405162461bcd60e51b815260040161028e906113fc565b60005b82518110156105a957801561069d57816106326001836116cb565b8151811061065057634e487b7160e01b600052603260045260246000fd5b602002602001015182828151811061067857634e487b7160e01b600052603260045260246000fd5b60200260200101511161069d5760405162461bcd60e51b815260040161028e90611520565b6106f58382815181106106c057634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106106e857634e487b7160e01b600052603260045260246000fd5b6020026020010151610e79565b806106ff8161174d565b915050610617565b600060035442101561071b575060006103e9565b6005546004546000905b6001548110156108de5760006009546001838154811061075557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016000015461077191906116ac565b90506001828154811061079457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101544211156107be576107b78185611674565b93506108cb565b60006201518060016107d081866116cb565b815481106107ee57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101546001858154811061082157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015461083d91906116cb565b610847919061168c565b9050600062015180600161085b81876116cb565b8154811061087957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101544261089691906116cb565b6108a0919061168c565b9050816108ad82856116ac565b6108b7919061168c565b6108c19086611674565b94505050506108de565b50806108d68161174d565b915050610725565b5060006108eb8284611674565b905060095460646108fc91906116ac565b811115610914576009546109119060646116ac565b90505b9250505090565b600a805461092890611712565b80601f016020809104026020016040519081016040528092919081815260200182805461095490611712565b80156109a15780601f10610976576101008083540402835291602001916109a1565b820191906000526020600020905b81548152906001019060200180831161098457829003601f168201915b505050505081565b600b81815481106109b957600080fd5b6000918252602090912001546001600160a01b0316905081565b6109db610d32565b6001600160a01b03166109ec6103dc565b6001600160a01b031614610a125760405162461bcd60e51b815260040161028e906114eb565b6001600160a01b038116610a385760405162461bcd60e51b815260040161028e906113b6565b61037881610d36565b6002546001600160a01b031681565b6000600354421015610a64575060006103e9565b6004546000905b600154811015610c3657600060095460018381548110610a9b57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160000154610ab791906116ac565b905060018281548110610ada57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154421115610b10578060056000828254610b059190611674565b90915550610c239050565b6000620151806001610b2281866116cb565b81548110610b4057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015460018581548110610b7357634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154610b8f91906116cb565b610b99919061168c565b90506000620151806001610bad81876116cb565b81548110610bcb57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015442610be891906116cb565b610bf2919061168c565b905081610bff82856116ac565b610c09919061168c565b610c139086611674565b60048590559450610c3692505050565b5080610c2e8161174d565b915050610a6b565b50600081600554610c479190611674565b90506009546064610c5891906116ac565b811115610c7057600954610c6d9060646116ac565b90505b91505090565b6001600160a01b038216600090815260076020526040812054600954610c9d9060646116ac565b6001600160a01b038516600090815260066020526040902054610cc19085906116ac565b610ccb919061168c565b610cd591906116cb565b9392505050565b6105a98363a9059cbb60e01b8484604051602401610cfb9291906112a2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ef0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610dac5760405162461bcd60e51b815260040161028e906115d8565b60008111610dcc5760405162461bcd60e51b815260040161028e9061146a565b6001600160a01b038216600090815260066020526040902054610e3557600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0384161790555b6001600160a01b038216600090815260066020526040902054610e59908290611674565b6001600160a01b0390921660009081526006602052604090209190915550565b604080518082019091529182526020820190815260018054808201825560009190915291517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600290930292830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790910155565b6000610f45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f7f9092919063ffffffff16565b8051909150156105a95780806020019051810190610f63919061123a565b6105a95760405162461bcd60e51b815260040161028e9061158e565b6060610f8e8484600085610f96565b949350505050565b606082471015610fb85760405162461bcd60e51b815260040161028e90611424565b610fc185611056565b610fdd5760405162461bcd60e51b815260040161028e90611557565b600080866001600160a01b03168587604051610ff99190611272565b60006040518083038185875af1925050503d8060008114611036576040519150601f19603f3d011682016040523d82523d6000602084013e61103b565b606091505b509150915061104b82828661105c565b979650505050505050565b3b151590565b6060831561106b575081610cd5565b82511561107b5782518084602001fd5b8160405162461bcd60e51b815260040161028e9190611357565b80356001600160a01b03811681146103d757600080fd5b600082601f8301126110bc578081fd5b813560206110d16110cc83611650565b611626565b82815281810190858301838502870184018810156110ed578586fd5b855b8581101561110b578135845292840192908401906001016110ef565b5090979650505050505050565b600060208284031215611129578081fd5b610cd582611095565b60008060408385031215611144578081fd5b823567ffffffffffffffff8082111561115b578283fd5b818501915085601f83011261116e578283fd5b8135602061117e6110cc83611650565b82815281810190858301838502870184018b101561119a578788fd5b8796505b848710156111c3576111af81611095565b83526001969096019591830191830161119e565b50965050860135925050808211156111d9578283fd5b506111e6858286016110ac565b9150509250929050565b60008060408385031215611202578182fd5b823567ffffffffffffffff80821115611219578384fd5b611225868387016110ac565b935060208501359150808211156111d9578283fd5b60006020828403121561124b578081fd5b81518015158114610cd5578182fd5b60006020828403121561126b578081fd5b5035919050565b600082516112848184602087016116e2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156112fc5783516001600160a01b0316835292840192918401916001016112d7565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561134a57815180518552860151868501529284019290850190600101611325565b5091979650505050505050565b60006020825282518060208401526113768160408501602087016116e2565b601f01601f19169190910160400192915050565b6020808252601290820152714e6f20746f6b656e7320746f20636c61696d60701b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d496e76616c696420706172616d7360901b604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601f908201527f416d6f756e742068617320746f2062652067726561746572207468616e203000604082015260600190565b6020808252602a908201527f5573657220616c72656164792072656c656173656420616c6c20617661696c61604082015269626c6520746f6b656e7360b01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f556e6c6f636b2074696d652068617320746f20626520696e206f726465720000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526025908201527f5468652062656e6566696369617279277320616464726573732063616e6e6f74604082015264020626520360dc1b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff811182821017156116485761164861177e565b604052919050565b600067ffffffffffffffff82111561166a5761166a61177e565b5060209081020190565b6000821982111561168757611687611768565b500190565b6000826116a757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156116c6576116c6611768565b500290565b6000828210156116dd576116dd611768565b500390565b60005b838110156116fd5781810151838201526020016116e5565b8381111561170c576000848401525b50505050565b60028104600182168061172657607f821691505b6020821081141561174757634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561176157611761611768565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c3236678267860987beab9d575abf42947ae30a0fd2b32e9e5f76d620209d7d864736f6c63430008000033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vesting";
  }

  deploy(
    _token: string,
    _start: BigNumberish,
    _vestingName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(
      _token,
      _start,
      _vestingName,
      overrides || {}
    ) as Promise<Vesting>;
  }
  getDeployTransaction(
    _token: string,
    _start: BigNumberish,
    _vestingName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _start,
      _vestingName,
      overrides || {}
    );
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly contractName: "Vesting";
  public readonly contractName: "Vesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}

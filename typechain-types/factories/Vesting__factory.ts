/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_vestingName",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedUnlockedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenAmounts",
        type: "uint256[]",
      },
    ],
    name: "addBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_unlockTime",
        type: "uint256[]",
      },
    ],
    name: "addUnlockEvents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBeneficiaries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnlockEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.UnlockEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "releasedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockedSupplyIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a76400006009553480156200001d57600080fd5b50604051620018593803806200185983398101604081905262000040916200018d565b620000546200004e62000093565b62000097565b600280546001600160a01b0319166001600160a01b038516179055600382905580516200008990600a906020840190620000e7565b50505050620002db565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000f59062000288565b90600052602060002090601f01602090048101928262000119576000855562000164565b82601f106200013457805160ff191683800117855562000164565b8280016001018555821562000164579182015b828111156200016457825182559160200191906001019062000147565b506200017292915062000176565b5090565b5b8082111562000172576000815560010162000177565b600080600060608486031215620001a2578283fd5b83516001600160a01b0381168114620001b9578384fd5b60208581015160408701519295509350906001600160401b0380821115620001df578384fd5b818701915087601f830112620001f3578384fd5b815181811115620002085762000208620002c5565b604051601f8201601f19168101850183811182821017156200022e576200022e620002c5565b60405281815283820185018a101562000245578586fd5b8592505b8183101562000268578383018501518184018601529184019162000249565b818311156200027957858583830101525b80955050505050509250925092565b6002810460018216806200029d57607f821691505b60208210811415620002bf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61156e80620002eb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a9610655116100a2578063d1a82b0411610071578063d1a82b04146101f9578063efeb5e581461020e578063f2fde38b14610221578063fc0c546a14610234578063fd3d27b81461023c57610116565b8063a9610655146101c3578063be9a6555146101d6578063c6189b6f146101de578063d1959d87146101f157610116565b806389885049116100e9578063898850491461015e5780638da5cb5b14610171578063913b722c14610186578063a0afd4721461019b578063a0e2e5f6146101b057610116565b80631cf1bb721461011b578063325773fc1461014457806348c54b9d1461014c578063715018a614610156575b600080fd5b61012e610129366004610ebc565b610244565b60405161013b91906113c1565b60405180910390f35b61012e610256565b61015461025c565b005b610154610375565b61012e61016c366004610ebc565b6103c0565b6101796103d6565b60405161013b9190611032565b61018e6103e5565b60405161013b919061105f565b6101a3610447565b60405161013b91906110ac565b61012e6101be366004610ebc565b6104ba565b6101546101d1366004610ed6565b6104cc565b61012e6105a7565b6101546101ec366004610f94565b6105ad565b61012e610700565b610201610706565b60405161013b91906110fb565b61017961021c366004610ffe565b610794565b61015461022f366004610ebc565b6107be565b61017961082c565b61012e61083b565b60076020526000908152604090205481565b60045481565b336000908152600660205260409020546102915760405162461bcd60e51b81526004016102889061112e565b60405180910390fd5b33600090815260066020908152604080832054600790925290912054106102ca5760405162461bcd60e51b815260040161028890611245565b60006102dd336102d86108ec565b6109aa565b905080156103725780600860008282546102f79190611418565b9091555050600254610313906001600160a01b03163383610a7e565b3360009081526007602052604081208054839290610332908490611418565b90915550506040517fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e906103699033908490611046565b60405180910390a15b50565b61037d610ad4565b6001600160a01b031661038e6103d6565b6001600160a01b0316146103b45760405162461bcd60e51b81526004016102889061128f565b6103be6000610ad8565b565b60006103ce826102d861083b565b90505b919050565b6000546001600160a01b031690565b6060600b80548060200260200160405190810160405280929190818152602001828054801561043d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161041f575b5050505050905090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156104b15783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061046b565b50505050905090565b60066020526000908152604090205481565b6104d4610ad4565b6001600160a01b03166104e56103d6565b6001600160a01b03161461050b5760405162461bcd60e51b81526004016102889061128f565b805182511461052c5760405162461bcd60e51b8152600401610288906111a0565b60005b82518110156105a25761059083828151811061055b57634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061058357634e487b7160e01b600052603260045260246000fd5b6020026020010151610b28565b8061059a816114f1565b91505061052f565b505050565b60035481565b6105b5610ad4565b6001600160a01b03166105c66103d6565b6001600160a01b0316146105ec5760405162461bcd60e51b81526004016102889061128f565b805182511461060d5760405162461bcd60e51b8152600401610288906111a0565b60005b82518110156105a2578015610696578161062b60018361146f565b8151811061064957634e487b7160e01b600052603260045260246000fd5b602002602001015182828151811061067157634e487b7160e01b600052603260045260246000fd5b6020026020010151116106965760405162461bcd60e51b8152600401610288906112c4565b6106ee8382815181106106b957634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106106e157634e487b7160e01b600052603260045260246000fd5b6020026020010151610c1b565b806106f8816114f1565b915050610610565b60055481565b600a8054610713906114b6565b80601f016020809104026020016040519081016040528092919081815260200182805461073f906114b6565b801561078c5780601f106107615761010080835404028352916020019161078c565b820191906000526020600020905b81548152906001019060200180831161076f57829003601f168201915b505050505081565b600b81815481106107a457600080fd5b6000918252602090912001546001600160a01b0316905081565b6107c6610ad4565b6001600160a01b03166107d76103d6565b6001600160a01b0316146107fd5760405162461bcd60e51b81526004016102889061128f565b6001600160a01b0381166108235760405162461bcd60e51b81526004016102889061115a565b61037281610ad8565b6002546001600160a01b031681565b600554600454600091905b6001548110156108e6576001818154811061087157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101544211156108cf57600181815481106108ab57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160000154826108c89190611418565b91506108d4565b6108e6565b806108de816114f1565b915050610846565b50905090565b6004546000905b6001548110156109a2576001818154811061091e57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154421115610986576001818154811061095857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001546005600082825461097b9190611418565b909155506109909050565b60048190556109a2565b8061099a816114f1565b9150506108f3565b505060055490565b6000816109b957506000610a78565b6009546001600160a01b038416600090815260066020526040812054909184916109e39190611450565b6109ed9190611430565b905060006201518060035442610a03919061146f565b610a0d9190611430565b90506000610a1b8383611450565b9050600954811115610a2c57506009545b6001600160a01b0386166000908152600760209081526040808320546009546006909352922054610a5e908490611450565b610a689190611430565b610a72919061146f565b93505050505b92915050565b6105a28363a9059cbb60e01b8484604051602401610a9d929190611046565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610c92565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610b4e5760405162461bcd60e51b81526004016102889061137c565b60008111610b6e5760405162461bcd60e51b81526004016102889061120e565b6001600160a01b038216600090815260066020526040902054610bd757600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0384161790555b6001600160a01b038216600090815260066020526040902054610bfb908290611418565b6001600160a01b0390921660009081526006602052604090209190915550565b604080518082019091529182526020820190815260018054808201825560009190915291517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600290930292830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790910155565b6000610ce7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d219092919063ffffffff16565b8051909150156105a25780806020019051810190610d059190610fde565b6105a25760405162461bcd60e51b815260040161028890611332565b6060610d308484600085610d3a565b90505b9392505050565b606082471015610d5c5760405162461bcd60e51b8152600401610288906111c8565b610d6585610dfa565b610d815760405162461bcd60e51b8152600401610288906112fb565b600080866001600160a01b03168587604051610d9d9190611016565b60006040518083038185875af1925050503d8060008114610dda576040519150601f19603f3d011682016040523d82523d6000602084013e610ddf565b606091505b5091509150610def828286610e00565b979650505050505050565b3b151590565b60608315610e0f575081610d33565b825115610e1f5782518084602001fd5b8160405162461bcd60e51b815260040161028891906110fb565b80356001600160a01b03811681146103d157600080fd5b600082601f830112610e60578081fd5b81356020610e75610e70836113f4565b6113ca565b8281528181019085830183850287018401881015610e91578586fd5b855b85811015610eaf57813584529284019290840190600101610e93565b5090979650505050505050565b600060208284031215610ecd578081fd5b610d3382610e39565b60008060408385031215610ee8578081fd5b823567ffffffffffffffff80821115610eff578283fd5b818501915085601f830112610f12578283fd5b81356020610f22610e70836113f4565b82815281810190858301838502870184018b1015610f3e578788fd5b8796505b84871015610f6757610f5381610e39565b835260019690960195918301918301610f42565b5096505086013592505080821115610f7d578283fd5b50610f8a85828601610e50565b9150509250929050565b60008060408385031215610fa6578182fd5b823567ffffffffffffffff80821115610fbd578384fd5b610fc986838701610e50565b93506020850135915080821115610f7d578283fd5b600060208284031215610fef578081fd5b81518015158114610d33578182fd5b60006020828403121561100f578081fd5b5035919050565b60008251611028818460208701611486565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156110a05783516001600160a01b03168352928401929184019160010161107b565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b828110156110ee578151805185528601518685015292840192908501906001016110c9565b5091979650505050505050565b600060208252825180602084015261111a816040850160208701611486565b601f01601f19169190910160400192915050565b6020808252601290820152714e6f20746f6b656e7320746f20636c61696d60701b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d496e76616c696420706172616d7360901b604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601f908201527f416d6f756e742068617320746f2062652067726561746572207468616e203000604082015260600190565b6020808252602a908201527f5573657220616c72656164792072656c656173656420616c6c20617661696c61604082015269626c6520746f6b656e7360b01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f556e6c6f636b2074696d652068617320746f20626520696e206f726465720000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526025908201527f5468652062656e6566696369617279277320616464726573732063616e6e6f74604082015264020626520360dc1b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff811182821017156113ec576113ec611522565b604052919050565b600067ffffffffffffffff82111561140e5761140e611522565b5060209081020190565b6000821982111561142b5761142b61150c565b500190565b60008261144b57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561146a5761146a61150c565b500290565b6000828210156114815761148161150c565b500390565b60005b838110156114a1578181015183820152602001611489565b838111156114b0576000848401525b50505050565b6002810460018216806114ca57607f821691505b602082108114156114eb57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115055761150561150c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209f52d612d43230d270f389f082ece930e638e13e80ef8c8c2a15ee4730d0ecd464736f6c63430008000033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vesting";
  }

  deploy(
    _token: string,
    _start: BigNumberish,
    _vestingName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(
      _token,
      _start,
      _vestingName,
      overrides || {}
    ) as Promise<Vesting>;
  }
  getDeployTransaction(
    _token: string,
    _start: BigNumberish,
    _vestingName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _start,
      _vestingName,
      overrides || {}
    );
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly contractName: "Vesting";
  public readonly contractName: "Vesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
